name: Swift

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/swiftlint.yml'
      - '.swiftlint.yml'
      - '**/*.swift'

jobs:
  SwiftLint:
    name: Swiftlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout action
        uses: actions/checkout@v2
      - name: SwiftLint
        uses: norio-nomura/action-swiftlint@3.1.0
          
  Build:
    name: Build
    env:
      SCHEME: "LoadableImage"
      DEVICE: "iPhone 11"
      DERIVED_DATA_PATH: "DerivedData"
    runs-on: macOS-latest
    steps:
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_12.app
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Build application
        run: |
          set -o pipefail && xcodebuild clean -scheme $SCHEME -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH build-for-testing | xcpretty --color --simple
      - name: Upload products
        uses: actions/upload-artifact@v1
        with:
          name: Products
          path: DerivedData/Build/Products

  Test:
    name: Test
    env:
      DEVICE: "iPhone 11"
      DERIVED_DATA_PATH: "DerivedData"
      UNIT_TEST_TARGET: "LoadableImageTests"
    runs-on: macos-latest
    needs: Build
    steps:
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode_12.app
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Download products
        uses: actions/download-artifact@v1
        with:
          name: Products
      - name: Run tests
        run: |
          set -o pipefail && xcodebuild test-without-building -xctestrun $(find . -type f -name "*.xctestrun") -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH -enableCodeCoverage YES -only-testing:$UNIT_TEST_TARGET | xcpretty --color --simple
          
  Codecov:
    runs-on: ubuntu-latest
    needs: Test
    name: Codecov
    steps:
      - name: Download products
        uses: actions/download-artifact@v1
      - name: Checkout project
        uses: actions/checkout@master
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flag: unittests
          fail_ci_if_error: true
